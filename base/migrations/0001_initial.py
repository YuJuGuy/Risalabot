# Generated by Django 5.1.4 on 2024-12-27 21:29

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='FlowActionTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StaticBot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('return_message', models.TextField()),
                ('condition', models.IntegerField(choices=[(1, 'النص بالضبط'), (2, 'يحتوي على النص')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_name', models.CharField(max_length=255)),
                ('store_domain', models.CharField(blank=True, max_length=255, null=True)),
                ('store_id', models.CharField(max_length=255, unique=True)),
                ('access_token', models.CharField(blank=True, max_length=255, null=True)),
                ('refresh_token', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('token_valid', models.BooleanField(default=True)),
                ('token_refresh_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('subscription_message_count', models.IntegerField(default=0)),
                ('total_customers', models.IntegerField(default=0)),
                ('total_purchases', models.IntegerField(default=0)),
                ('total_clicks', models.IntegerField(default=0)),
                ('total_messages_sent', models.IntegerField(default=0)),
                ('subscription_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('botenabled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('messages_limit', models.IntegerField()),
                ('description', models.TextField()),
                ('staticbot', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SuggestedFlow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('img', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Trigger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('event_type', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=200, unique=True)),
                ('session_id', models.CharField(max_length=200, null=True, unique=True)),
                ('connected', models.BooleanField(default=False)),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Flow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'مسودة'), ('active', 'مفعلة'), ('paused', 'موقوفة'), ('archived', 'محظورة'), ('deleted', 'تم الحذف')], default='draft', max_length=20)),
                ('status_changed_at', models.DateTimeField(blank=True, null=True)),
                ('messages_sent', models.IntegerField(default=0)),
                ('purchases', models.IntegerField(default=0)),
                ('clicks', models.IntegerField(default=0)),
                ('track', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flows', to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.store')),
                ('trigger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flows', to='base.trigger')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FlowStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('action_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.flowactiontypes')),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='base.flow')),
            ],
        ),
        migrations.CreateModel(
            name='CouponConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('fixed', 'مبلغ ثابت'), ('percentage', 'نسبة مئوية')], max_length=50)),
                ('amount', models.IntegerField()),
                ('expire_in', models.IntegerField()),
                ('maximum_amount', models.IntegerField(null=True)),
                ('free_shipping', models.BooleanField()),
                ('exclude_sale_products', models.BooleanField()),
                ('message', models.TextField(blank=True, null=True)),
                ('flow_step', models.OneToOneField(limit_choices_to={'text_config__isnull': True, 'time_delay_config__isnull': True}, on_delete=django.db.models.deletion.CASCADE, related_name='coupon_config', to='base.flowstep')),
            ],
        ),
        migrations.CreateModel(
            name='StaticBotStartMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.store')),
            ],
        ),
        migrations.CreateModel(
            name='StaticBotStart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=False)),
                ('return_message', models.TextField()),
                ('hours', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('store', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='base.store')),
            ],
        ),
        migrations.CreateModel(
            name='StaticBotMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0)),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.staticbot')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.store')),
            ],
        ),
        migrations.CreateModel(
            name='StaticBotLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.CharField(max_length=255)),
                ('time', models.DateTimeField()),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.store')),
            ],
        ),
        migrations.AddField(
            model_name='staticbot',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.store'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.store')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.BigIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.store')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=255)),
                ('customer_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_email', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_phone', models.CharField(max_length=255)),
                ('customer_location', models.CharField(max_length=255)),
                ('customer_updated_at', models.DateTimeField()),
                ('customer_groups', models.ManyToManyField(related_name='customers', to='base.group')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.store')),
            ],
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('delay_in_seconds', models.IntegerField(default=0)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('scheduled_time', models.DateTimeField()),
                ('status', models.CharField(default='draft', max_length=20)),
                ('clicks', models.IntegerField(default=0)),
                ('purchases', models.IntegerField(default=0)),
                ('msg', models.TextField()),
                ('customers_group', models.CharField(max_length=255)),
                ('messages_sent', models.IntegerField(default=0)),
                ('track', models.BooleanField(default=False)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.store')),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_type', models.CharField(choices=[('flow', 'الأتمتة'), ('campaign', 'الحملة')], max_length=10)),
                ('source_id', models.UUIDField()),
                ('activity_type', models.CharField(choices=[('message', 'رسائل'), ('purchase', 'مشتريات'), ('click', 'ضغطات')], max_length=10)),
                ('date', models.DateField()),
                ('count', models.IntegerField(default=0)),
                ('user_ip', models.CharField(blank=True, max_length=255, null=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.store')),
            ],
        ),
        migrations.CreateModel(
            name='AbandonedCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(max_length=255)),
                ('cart_id', models.CharField(max_length=255)),
                ('flow_id', models.UUIDField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bought', models.BooleanField(default=False)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.store')),
            ],
        ),
        migrations.AddField(
            model_name='store',
            name='subscription',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.subscription'),
        ),
        migrations.CreateModel(
            name='SuggestedFlowStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('action_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.flowactiontypes')),
                ('suggested_flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='base.suggestedflow')),
            ],
        ),
        migrations.CreateModel(
            name='SuggestedCouponConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('fixed', 'مبلغ ثابت'), ('percentage', 'نسبة مئوية')], max_length=50)),
                ('amount', models.IntegerField()),
                ('expire_in', models.IntegerField()),
                ('maximum_amount', models.IntegerField(null=True)),
                ('free_shipping', models.BooleanField()),
                ('exclude_sale_products', models.BooleanField()),
                ('message', models.TextField(blank=True, null=True)),
                ('suggested_flow_step', models.OneToOneField(limit_choices_to={'suggested_text_config__isnull': True, 'suggested_time_delay_config__isnull': True}, on_delete=django.db.models.deletion.CASCADE, related_name='suggested_coupon_config', to='base.suggestedflowstep')),
            ],
        ),
        migrations.CreateModel(
            name='SuggestedTextConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('suggested_flow_step', models.OneToOneField(limit_choices_to={'suggested_coupon_config__isnull': True, 'suggested_time_delay_config__isnull': True}, on_delete=django.db.models.deletion.CASCADE, related_name='suggested_text_config', to='base.suggestedflowstep')),
            ],
        ),
        migrations.CreateModel(
            name='SuggestedTimeDelayConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delay_time', models.PositiveIntegerField()),
                ('delay_type', models.CharField(choices=[('hours', 'Hours'), ('days', 'Days'), ('minutes', 'Minutes')], max_length=50)),
                ('suggested_flow_step', models.OneToOneField(limit_choices_to={'suggested_coupon_config__isnull': True, 'suggested_text_config__isnull': True}, on_delete=django.db.models.deletion.CASCADE, related_name='suggested_time_delay_config', to='base.suggestedflowstep')),
            ],
        ),
        migrations.CreateModel(
            name='TextConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('flow_step', models.OneToOneField(limit_choices_to={'coupon_config__isnull': True, 'time_delay_config__isnull': True}, on_delete=django.db.models.deletion.CASCADE, related_name='text_config', to='base.flowstep')),
            ],
        ),
        migrations.CreateModel(
            name='TimeDelayConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delay_time', models.PositiveIntegerField()),
                ('delay_type', models.CharField(choices=[('hours', 'Hours'), ('days', 'Days'), ('minutes', 'Minutes')], max_length=50)),
                ('flow_step', models.OneToOneField(limit_choices_to={'coupon_config__isnull': True, 'text_config__isnull': True}, on_delete=django.db.models.deletion.CASCADE, related_name='time_delay_config', to='base.flowstep')),
            ],
        ),
        migrations.AddField(
            model_name='suggestedflow',
            name='trigger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggested_flows', to='base.trigger'),
        ),
        migrations.CreateModel(
            name='UserStoreLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.store')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='flowstep',
            constraint=models.UniqueConstraint(fields=('flow', 'order'), name='unique_order_per_flow'),
        ),
        migrations.AlterUniqueTogether(
            name='staticbot',
            unique_together={('store', 'message')},
        ),
        migrations.AlterUniqueTogether(
            name='group',
            unique_together={('store', 'group_id')},
        ),
        migrations.AddConstraint(
            model_name='suggestedflowstep',
            constraint=models.UniqueConstraint(fields=('suggested_flow', 'order'), name='unique_order_per_suggestedflowstep'),
        ),
    ]
